
Node.js란 무엇인가?
- Node.js 소개
- 서버 사이드 JavaScript 실행 환경
- Google V8 JavaScript 엔진 기반

---

Node.js의 탄생 배경
- 2009년, Ryan Dahl이 처음 개발
- 브라우저에서만 동작하던 JavaScript를 서버에서도 실행하기 위해 탄생

---

Node.js의 주요 특징
- **비동기 I/O**: 이벤트 기반 비동기 프로그래밍 지원
- **단일 스레드**: 빠른 처리 속도와 자원 효율성
- **크로스 플랫폼**: Windows, macOS, Linux 등에서 사용 가능

---

Node.js의 장점
- 서버와 클라이언트 모두에서 JavaScript 사용 가능
- 높은 성능과 확장성 제공
- 다양한 패키지를 제공하는 **npm 생태계** (Node Package Manager)

---

npm과 모듈
- **npm**: 세계 최대 오픈 소스 라이브러리 저장소
- 다양한 모듈을 쉽게 설치하고 관리 가능
- 예시: Express, Mongoose 등

---

Node.js의 사용 예시
- **웹 서버**: Express로 REST API 구축
- **채팅 애플리케이션**: 실시간 데이터 전송 가능 (Socket.io)
- **IoT**: 라즈베리 파이와 같은 IoT 디바이스 제어

---

Node.js 아키텍처
- **이벤트 루프**: 비동기 작업을 효율적으로 관리
- **콜백과 프라미스**를 통해 코드 비동기 처리
- 노드 아키텍처 구조 설명

---

Node.js의 한계
- CPU 집중적인 작업에는 비효율적
- 단일 스레드 모델로 인해 복잡한 연산이 오래 걸림
- 적합한 사용 사례와 부적합한 사용 사례 설명

---

Node.js를 배워야 하는 이유
- 웹 개발에서 JavaScript의 영향력 증가
- 풀스택 개발자가 되기 위한 필수 기술
- 실시간 애플리케이션 및 REST API 구축에 강력

---

결론 및 학습 리소스
- Node.js로 할 수 있는 것 정리
- 학습을 위한 추천 리소스: 공식 문서, 온라인 강의
- 실습과 프로젝트 예제 소개
